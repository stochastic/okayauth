info:
  contact:
    name: OkayAuth
    email: info@okayauth.com
    url: https://okayauth.com
  license:
    name: MIT
    url: https://okayauth.com
  version: 1.0.0
  title: OkayAuth Auth Server
  description: OpenID Connect and OAuth 2.0 server
servers:
  - url: https://auth.okayauth.com
tags:
  - name: Token Management
    description: Get or revoke access and refresh tokens.
openapi: 3.0.3
components:
  securitySchemes:
    clientCredentialsBasicAuth:
      description: The client ID and secret are sent as the username and password of
        an HTTP Basic Auth request.
      type: http
      scheme: basic
  schemas:
    ClientIdentifier:
      type: string
      example: a1b2c3d4e5f6g7h8i9j0
      description: The client ID assigned on registration. Cannot be changed by the
        client - if the value sent by the client when updating a registration
        does not match the current value, the request will be rejected.
    ClientCredentialsRequest:
      type: object
      properties:
        grant_type:
          type: string
          enum:
            - client_credentials
        client_id:
          $ref: "#/components/schemas/ClientIdentifier"
        client_secret:
          type: string
          example: a1b2c3d4e5f6g7h8i9j0
          description: Client secret assigned on registration.
        scope:
          type: string
      required:
        - grant_type
        - client_id
        - client_secret
      additionalProperties: false
    TokenRequest:
      oneOf:
        - $ref: "#/components/schemas/ClientCredentialsRequest"
      discriminator:
        propertyName: grant_type
        mapping:
          client_credentials: "#/components/schemas/ClientCredentialsRequest"
    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
          example: a1b2c3d4e5f6g7h8i9j0.a1b2c3d4e5f6g7h8i9j0.a1b2c3d4e5f6g7h8i9j0
          description: The newly-obtained access token
        token_type:
          type: string
          enum:
            - bearer
          description: The type of the token. Currently only bearer tokens are emitted.
        expires_in:
          type: number
          example: 3600
          description: The lifetime of the access token, in seconds.
        refresh_token:
          type: string
          description: The refresh token to use, for an 'authorization_code' token request.
        scope:
          type: string
          description: The effective scope of the newly-obtained token.
      required:
        - access_token
        - token_type
    TokenErrorResponse:
      type: object
      properties:
        error:
          type: string
          enum:
            - invalid_request
            - invalid_client
            - invalid_grant
            - unauthorized_client
            - unsupported_grant_type
            - invalid_scope
          description: A machine-readable category for the error, as in [RFC 6749,
            §4.1.2.1](https://tools.ietf.org/html/rfc6749#section-4.1.2.1).
        error_description:
          type: string
          description: A human-readable error message that gives details about the error.
        error_uri:
          type: string
          description: A URL that gives more information about the error.
      required:
        - error
  parameters: {}
paths:
  /oauth/token:
    post:
      operationId: ClientCredentialsToken
      tags:
        - Token Management
      summary: Request an access token
      description: >-
        The token endoint, as described in [RFC 6749
        §3.2](https://www.rfc-editor.org/rfc/rfc6749.html#section-3.2), used in
        three
          cases:
           * Authorization Code Grant [RFC 6749 §4.1](https://www.rfc-editor.org/rfc/rfc6749.html#section-4.1), with the PKCE
             extension [RFC 7636 §4.5](https://www.rfc-editor.org/rfc/rfc7636.html#section-4.5);
           * Client Credentials Grant [RFC 6749 §4.4](https://www.rfc-editor.org/rfc/rfc6749.html#section-4.4);
           * Token Refresh [RFC 6749 §6](https://www.rfc-editor.org/rfc/rfc6749.html#section-6);
      security: []
      requestBody:
        description: IDK some stuff
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/TokenRequest"
      responses:
        "200":
          description: New access token generated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "400":
          description: Some parameters were invalid.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenErrorResponse"
